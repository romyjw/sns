E = (scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2;F = (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25;G = (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625;L = (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2);M = ((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2);N = (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2);H = ((((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*(2*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - 2*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2);K = -(((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)/(((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - ((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2);n1 = ((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2);n2 = ((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2);n3 = ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2);dir11 = ((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) - ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2)))/(((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) - ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2)) + scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25);dir12 = scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) - ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2)))/(((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) - ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2)) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25);dir13 = scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) - ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2)))/(25*(((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) - ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2)));dir21 = scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - ((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))/(((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25);dir22 = ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*((((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))/(((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25);dir23 = scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*((((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))/(25*(((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)*(((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((((2*(scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (2*((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)))^2 + (((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) + (((scale*cos(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))^2)*(4*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 4*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2))^(1/2) + ((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*cos(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))*(scale*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) + scale*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (6*theta^3*cos(6*theta)*sin(6*theta))/5 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25) - scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(theta)*sin(phi)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((3*theta^2*sin(6*phi + 6*theta^2)^2)/50 + (36*theta^3*cos(12*theta))/5 + (3*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (3*theta*sin(6*theta)^2)/5 + (9*theta^2*sin(12*theta))/5 + (18*theta^2*cos(6*theta)*sin(6*theta))/5 + (216*theta^4*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (3*theta*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/25 + (9*theta^3*sin(12*phi + 12*theta^2)*(2*theta - 2*pi))/25 + (27*theta^2*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta^3*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25 + (36*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25)))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)) - ((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*sin(phi)*sin(theta)*(theta - pi)^2)/25 - (18*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25 - (54*scale*theta^2*sin(6*phi + 6*theta^2)^2*cos(theta)*(theta - pi)^2)/25)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (54*scale*theta^2*cos(6*phi + 6*theta^2)^2*cos(phi)*sin(theta)*(theta - pi)^2)/25 + (54*scale*theta^2*cos(phi)*sin(6*phi + 6*theta^2)^2*sin(theta)*(theta - pi)^2)/25 + (18*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2))))/(2*((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2 + (scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))^2)*((scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)^2 + (scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)^2 + (81*scale^2*theta^4*cos(6*phi + 6*theta^2)^2*sin(6*phi + 6*theta^2)^2*cos(theta)^2*(theta - pi)^4)/625) - 2*((scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) - (scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(theta - pi)^2)/25)^2) + (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(theta - pi)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) + scale*sin(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*sin(phi)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2) - (((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(theta - pi)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25)))/25)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*theta - 2*pi))/100 + (3*theta*sin(6*phi + 6*theta^2)^2*(theta - pi)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(theta - pi)^2)/25) - scale*cos(phi)*sin(theta)*((108*theta^3*cos(12*phi + 12*theta^2)*(theta - pi)^2)/25 + (18*theta*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(theta - pi)^2)/25 + (9*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*(2*theta - 2*pi))/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*cos(theta)*(theta - pi)^2)/25))/(abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - scale*cos(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*cos(theta)*(scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(pi - theta)^2)/25)^2 + abs((scale*cos(phi)*cos(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*cos(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*cos(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + (9*scale*theta^2*cos(6*phi + 6*theta^2)*sin(6*phi + 6*theta^2)*sin(phi)*sin(theta)*(pi - theta)^2)/25) + (scale*cos(theta)*sin(phi)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) + scale*sin(phi)*sin(theta)*((3*theta^3*sin(12*theta))/5 + (3*theta^2*sin(6*theta)^2)/10 + (3*theta*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/50 + (9*theta^3*sin(12*phi + 12*theta^2)*(pi - theta)^2)/25 - (3*theta^2*sin(6*phi + 6*theta^2)^2*(2*pi - 2*theta))/100))*(scale*sin(phi)*sin(theta)*((theta^3*sin(6*theta)^2)/10 + (3*theta^2*sin(6*phi + 6*theta^2)^2*(pi - theta)^2)/100 + 1) - (9*scale*theta^2*cos(6*phi + 6*theta^2)*cos(phi)*sin(6*phi + 6*theta^2)*sin(theta)*(pi - theta)^2)/25))^2)^(1/2)));